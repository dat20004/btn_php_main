<?php 
session_start();
include 'header.php'; 

// Kết nối với cơ sở dữ liệu
require_once('../connect.php');

// Bắt đầu phiên làm việc


// Kiểm tra nếu người dùng đã đăng nhập
if (isset($_SESSION['userID'])) {
    $teacherId = $_SESSION['userID']; // ID giảng viên từ session
    // Lưu tên người dùng vào session
    // $_SESSION['full_name'] = $loggedInUserName; 

    try {
        // Truy vấn tổng số khóa học mà giảng viên đã dạy
        $stmt_courses = $pdo->prepare("SELECT COUNT(*) AS total_courses FROM courses WHERE teacher_id = :teacher_id");
        $stmt_courses->execute(['teacher_id' => $teacherId]);
        $total_courses = $stmt_courses->fetchColumn();

        // Truy vấn tổng số học sinh đã đăng ký khóa học do giảng viên dạy
        $stmt_students = $pdo->prepare("
            SELECT COUNT(DISTINCT r.student_id) AS total_students
            FROM course_enrollments r
            INNER JOIN courses c ON r.course_id = c.id
            WHERE c.teacher_id = :teacher_id
        ");
        $stmt_students->execute(['teacher_id' => $teacherId]);
        $total_students = $stmt_students->fetchColumn();
    } catch (PDOException $e) {
        die("Câu truy vấn thất bại: " . $e->getMessage());
    }
} else {
    echo "Vui lòng đăng nhập để xem thông tin thống kê.";
    exit;
}
// Kiểm tra nếu form tìm kiếm được gửi
if (isset($_POST['searchQuery'])) {
    $searchQuery = $_POST['searchQuery'];

    $sql = "SELECT u.id, u.full_name, u.gender, u.state, u.phone_number 
            FROM users u
            JOIN course_enrollments sc ON u.id = sc.student_id
            JOIN courses c ON sc.course_id = c.id
            WHERE u.role = 'Student' 
              AND c.teacher_id = :teacherId 
              AND u.full_name LIKE :searchQuery";

    // Chuẩn bị và thực thi truy vấn
    $stmt = $pdo->prepare($sql);
    $stmt->execute([
        'teacherId' => $teacherId, // ID của giảng viên hiện tại
        'searchQuery' => '%' . $searchQuery . '%'
    ]);
} else {
    // Nếu không tìm kiếm, hiển thị tất cả sinh viên của giảng viên
    $sql = "SELECT u.id, u.full_name, u.gender, u.state, u.phone_number 
            FROM users u
            JOIN course_enrollments sc ON u.id = sc.student_id
            JOIN courses c ON sc.course_id = c.id
            WHERE u.role = 'Student' 
              AND c.teacher_id = :teacherId";

    // Chuẩn bị và thực thi truy vấn
    $stmt = $pdo->prepare($sql);
    $stmt->execute(['teacherId' => $teacherId]);
}

// Lấy danh sách sinh viên
$students = $stmt->fetchAll(PDO::FETCH_ASSOC);


// Lấy kết quả tìm kiếm
$results = $stmt->fetchAll(PDO::FETCH_ASSOC);

// Lấy danh sách chương và bài học
$sql_chapters_lessons = "
    SELECT chapters.id AS chapter_id, chapters.title AS chapter_title, 
           lessons.id AS lesson_id, lessons.title AS lesson_title
    FROM chapters
    LEFT JOIN lessons ON chapters.id = lessons.chapter_id
    ORDER BY chapters.id, lessons.id
";

try {
    // Truy vấn danh sách chương và bài học
    $stmt_chapters = $pdo->prepare($sql_chapters_lessons);
    $stmt_chapters->execute();
    $result_chapters = $stmt_chapters->fetchAll(PDO::FETCH_ASSOC); // Lấy tất cả kết quả về chương và bài học

    // Truy vấn câu hỏi
    
} catch (PDOException $e) {
    die("Câu truy vấn thất bại: " . $e->getMessage());
}
if (isset($_POST['searchQueryRequest'])) {
    $searchQueryRequest = $_POST['searchQueryRequest'];

    // Truy vấn câu hỏi với điều kiện tìm kiếm
    $stmt_questions = $pdo->prepare("
    SELECT cq.id, 
           u.full_name AS student_name, 
           u.email, 
           cq.question, 
           cq.state, 
           cq.create_at, 
           c.name AS course_title, 
           (SELECT MAX(a.create_at) FROM answers a WHERE a.question_id = cq.id) AS last_reply_date
    FROM course_questions cq
    INNER JOIN users u ON cq.student_id = u.id
    INNER JOIN courses c ON cq.course_id = c.id
    WHERE u.full_name LIKE :searchQuery
    ORDER BY cq.create_at DESC
");
$stmt_questions->execute(['searchQuery' => '%' . $searchQueryRequest . '%']);
$questions = $stmt_questions->fetchAll(PDO::FETCH_ASSOC); // Lấy tất cả câu hỏi
} else {
    // Nếu không tìm kiếm, hiển thị tất cả câu hỏi
    $stmt_questions = $pdo->prepare("
        SELECT cq.id, 
               u.full_name AS student_name, 
               u.email, 
               cq.question, 
               cq.state, 
               cq.create_at, 
               c.name AS course_title,  
               (SELECT MAX(a.create_at) FROM answers a WHERE a.question_id = cq.id) AS last_reply_date
        FROM course_questions cq
        INNER JOIN users u ON cq.student_id = u.id
        INNER JOIN courses c ON cq.course_id = c.id 
        ORDER BY cq.create_at DESC
    ");
    $stmt_questions->execute();
    $questions = $stmt_questions->fetchAll(PDO::FETCH_ASSOC); 
}


try {
    $stmt = $pdo->prepare("SELECT * FROM users WHERE id = :id");
    $stmt->bindParam(':id', $user_id);
    $stmt->execute();
    $user = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if (!$user) {
        die("Người dùng không tồn tại.");
    }
} catch (PDOException $e) {
    die("Lỗi: " . $e->getMessage());
}


// if ($_SERVER['REQUEST_METHOD'] == 'POST') {
//     $name = $_POST['name'];
//     $email = $_POST['email'];
//     $phone = $_POST['phone'];
//     $description = $_POST['description'];
//     $address = $_POST['address'];

 
// }

$imagePath = '../admin/' . htmlspecialchars($user['avatar']);

// Lấy dữ liệu

// function isValidPassword($password) {
//     // Kiểm tra độ dài mật khẩu
//     if (strlen($password) < 8) {
//         return false;
//     }
//     // Kiểm tra có ít nhất một chữ hoa, một chữ thường và một chữ số
//     if (!preg_match('/[A-Z]/', $password) || !preg_match('/[a-z]/', $password) || !preg_match('/[0-9]/', $password)) {
//         return false;
//     }
//     return true;
// }

// Giả sử bạn đã lấy $userData và $userID từ phiên làm việc hoặc truy vấn
// Giả định bạn đã có $pdo là kết nối PDO
// if ($_SERVER['REQUEST_METHOD'] === 'POST') {
//     $user_id = $_SESSION['userID'];
//     $oldPassword = $_POST['oldPassword'];
//     $newPassword = $_POST['newPassword'];
//     $confirmPassword = $_POST['confirmPassword'];

//     // Verify if new passwords match
//     if ($newPassword !== $confirmPassword) {
//         $errorMessage = "Mật khẩu mới không khớp.";
//     } elseif ($oldPassword === $newPassword) {
//         $errorMessage = "Mật khẩu mới không được trùng với mật khẩu cũ.";
//     } else {
//         // Verify old password
//         $stmt = $pdo->prepare("SELECT password FROM users WHERE id = ?");
//         $stmt->bindValue(1, $user_id, PDO::PARAM_INT); // Gán giá trị cho tham số
//         $stmt->execute();
//         $user = $stmt->fetch(PDO::FETCH_ASSOC);

//         if (!password_verify($oldPassword, $user['password'])) {
//             $errorMessage = "Mật khẩu cũ không đúng.";
//         } else {
//             // Update password
//             $hashedNewPassword = password_hash($newPassword, PASSWORD_DEFAULT);
//             $stmt = $pdo->prepare("UPDATE users SET password = ? WHERE id = ?");

//             // Gán tham số
//             $stmt->bindValue(1, $hashedNewPassword);
//             $stmt->bindValue(2, $user_id, PDO::PARAM_INT);
//             $stmt->execute();

//             // Redirect to login page after successful password change
//             header('Location: login.php?message=Đổi mật khẩu thành công! Hãy đăng nhập lại.');
//             exit;
//         }
//     }
// }

// Biến để theo dõi chương hiện tại (nếu cần trong phần hiển thị chương và bài học)
$last_chapter_id = null; 

?>